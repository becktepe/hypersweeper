
defaults:
  - _self_
  - override hydra/sweeper: HyperNEPS
  

learning_rate: constant
learning_rate_init: 0.001
batch_size: 200
n_neurons: 10
n_layer: 1
solver: adam
activation: tanh
architecture: ""

seed: 42
epochs: 10  # Default number of epochs
neps_seed: 0

load: null
save: null

hydra:
  sweeper:
    n_trials: 207
    budget: 22_000
    budget_variable: epochs
    loading_variable: load
    saving_variable: save
    sweeper_kwargs:
      job_array_size_limit: 1
      # seeds: [0, 1, 2]
      slurm: false
      slurm_timeout: 1000
      min_budget: 10
      max_budget: 1000
      load_tf: true
      checkpoint_tf: true
      optimizer_kwargs:
        fidelity_variable: ${hydra.sweeper.budget_variable}
        architecture: neps.search_spaces.architecture.get_example_architecture.get_architecture
        architecture_default: "(S Sequential15 (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) down (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) down (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)) (C DenseCell (OPS id) (OPS id) (OPS id) (OPS id) (OPS id) (OPS id)))"
        min_budget: 10
        max_budget: 1000
        seed: ${neps_seed}
        optimizer:
          _target_: neps.optimizers.multi_fidelity_prior.priorband.PriorBand
          _partial_: true
          budget: ${hydra.sweeper.budget}
    search_space:
      seed: ${neps_seed}
      hyperparameters:
        n_layer:
          type: uniform_int
          lower: 1
          upper: 5
          default: ${n_layer}
        n_neurons:
          type: uniform_int
          lower: 8
          upper: 1024
          log: true
          default_value: ${n_neurons}
        activation:
          type: categorical
          choices: [ logistic, tanh, relu ]
          default_value: ${activation}
        solver:
          type: categorical
          choices: [ lbfgs, sgd, adam ]
          default_value: ${solver}
        batch_size:
          type: uniform_int
          lower: 30
          upper: 300
          default_value: ${batch_size}
        learning_rate:
          type: categorical
          choices: [ constant, invscaling, adaptive ]
          default_value: ${learning_rate}
        learning_rate_init:
          type: uniform_float
          lower: 0.0001
          upper: 1
          default_value: ${learning_rate_init}
          log: true
      conditions:
        - child: batch_size
          parent: solver
          type: IN
          values: [ sgd, adam ]
        - child: learning_rate
          parent: solver
          type: EQ
          value: sgd
        - child: learning_rate_init
          parent: solver
          type: IN
          values: [ sgd, adam ]

  run:
    dir: ./tmp/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: ./tmp/${now:%Y-%m-%d}/${now:%H-%M-%S}